{"tagline":"by Titas NorkÅ«nas","name":"Jenkins Workshop","google":"","body":"### Step 1: Download and start Jenkins\r\n\r\n```\r\nmkdir ~/jenkins\r\ncd ~/jenkins\r\nwget http://mirrors.jenkins-ci.org/war/latest/jenkins.war\r\njava -jar jenkins.war\r\n```\r\n\r\n### Step 2: Install Git Plugin\r\n\r\nGo to: [http://localhost:8080/pluginManager/available](http://localhost:8080/pluginManager/available)\r\n\r\nFind and install a plugin called \"Git Plugin\"\r\n\r\n### Step 3: Creating a job (1)\r\n\r\nGo to: [http://localhost:8080/newJob](http://localhost:8080/newJob)\r\n\r\nBuild a freestyle project called \"jenkins-workshop\"\r\n\r\nSelect Git as Source Code Management and enter parameters.\r\n\r\nRemote: `git://github.com/titas/jenkins-workshop.git`\r\n\r\nBranch: `origin/workshop`\r\n\r\nSelect Build Trigger.\r\n\r\nPoll SCM (every minute): `* * * * *`\r\n\r\n### Step 4: Creating a job (2)\r\n\r\nCreate `touch ~/.jenkins/setup.rb` file. This will be used to create required settings for your build.\r\n\r\n```\r\n#!/usr/bin/env ruby\r\n\r\ndb_name      = ENV[\"JOB_NAME\"].downcase\r\nproject_path = ENV[\"WORKSPACE\"]\r\ndatabase_yml = \"#{project_path}/config/database.yml\"\r\n\r\ndefault_template = <<-EOF\r\ntest:\r\n  adapter: mysql2\r\n  encoding: utf8\r\n  reconnect: false\r\n  database: jenkins-workshop-test\r\n  pool: 5\r\n  username: <your-username>\r\n  password: <your-password>\r\n  socket: /tmp/mysql.sock\r\nEOF\r\n\r\n`touch #{database_yml}`\r\nFile.open(database_yml, 'w') { |f| f.write(default_template) }\r\n```\r\n\r\nMake this file executable.\r\n\r\n```\r\nchmod +x ~/.jenkins/setup.rb\r\n```\r\n\r\n### Step 5: Creating a job (3)\r\n\r\nAdd build step - Execute Shell.\r\n\r\n```\r\nexport RAILS_ENV=test       # use test environment\r\nbundle install              # always do bundle install before running job\r\n\r\n~/.jenkins/setup.rb         # setup your job's settings\r\n\r\nbundle exec rake db:drop    # cleanup if last build went bad\r\nbundle exec rake db:create\r\nbundle exec rake db:migrate\r\nbundle exec rake            # run the build\r\n\r\nbundle exec rake db:drop    # cleanup afterwards\r\n```\r\n\r\nClick Save, observe your first build: [http://localhost:8080/job/jenkins-workshop/1/console](http://localhost:8080/job/jenkins-workshop/1/console)\r\n\r\n### Step 6: Configure CI reporter\r\n\r\nLets configure ci_reporter gem in the project. This will let us see some stats about build failures. \r\n\r\nWe need to change the way we run our test:\r\n\r\nChange your build step Execute Shell - replace `bundle exec rake` with `bundle exec rake ci:setup:minitest test`\r\n\r\nAdd a post build step - Publish JUnit test result report.\r\n\r\n```\r\ntest/reports/*.xml\r\n```\r\n\r\nI will push these changes once everyone is ready. [https://github.com/titas/jenkins-workshop/compare/workshop...ci-reporter](https://github.com/titas/jenkins-workshop/compare/workshop...ci-reporter)\r\n\r\nThere will be no changes after this build runs [http://localhost:8080/job/jenkins-workshop/2/console](http://localhost:8080/job/jenkins-workshop/2/console)\r\n\r\nTrigger one more build manually: [http://localhost:8080/job/jenkins-workshop/build?delay=0sec](http://localhost:8080/job/jenkins-workshop/build?delay=0sec)\r\n\r\nAfter this one is finished, take a look at build overview page: [http://localhost:8080/job/jenkins-workshop/](http://localhost:8080/job/jenkins-workshop/)\r\n\r\n### Step 7: Configure email notifications\r\n\r\nTake a look at E-mail Notification section in here: [http://localhost:8080/configure](http://localhost:8080/configure)\r\n\r\nSMTP server: `smtp.gmail.com`\r\n\r\nDefault suffix: `@gmail.com`\r\n\r\nSender: `<your-login@gmail.com>`\r\n\r\nUse authentication: `true`\r\n\r\nUser name: `<your-login>`\r\n\r\nPassword: `<your-password>`\r\n\r\nPort: `465`\r\n\r\nReply-To: `noreply@gmail.com`\r\n\r\nCharset: `UTF-8`\r\n\r\nClick Test Configuration to check if everything is alright.\r\n\r\nAdd a post build action to the job [http://localhost:8080/job/jenkins-workshop/configure](http://localhost:8080/job/jenkins-workshop/configure) to send an email to `<your@email.com>`\r\n\r\nLet me break the build: [https://github.com/titas/jenkins-workshop/compare/ci-reporter...break-build](https://github.com/titas/jenkins-workshop/compare/ci-reporter...break-build)\r\n\r\n### Step 8: Finished..?\r\n\r\nAlmost!\r\n\r\nLet's fix the build: [https://github.com/titas/jenkins-workshop/compare/break-build...fix-build](https://github.com/titas/jenkins-workshop/compare/break-build...fix-build)\r\n\r\nCI reporter did its job: [http://localhost:8080/job/jenkins-workshop/](http://localhost:8080/job/jenkins-workshop/)\r\n\r\nNow we're done. Thanks!","note":"Don't delete this file! It's used internally to help with page regeneration."}